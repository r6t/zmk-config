/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";
 
              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  BSPC  |
 // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSLH  |
 // | LOWER  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
 // | SHIFT  |   Z    |   X    |   C    |   V    |   B    |        |                    |        |   N    |   M    |   ,    |   .    |   /    |  RET   |
 // | LCTRL  |  ESC   |  ALT   |  EQUAL |  LCMD  | SPACE  |        |                    |        | SPACE  | RAISE  | MINUS  |  LBKT  |  RBKT  |  SHIFT |
                     bindings = <
       &kp GRAVE  &kp N1  &kp N2   &kp N3    &kp N4    &kp N5                               &kp N6    &kp N7    &kp N8    &kp N9     &kp N0    &kp BSPC
       &kp TAB    &kp Q   &kp W    &kp E     &kp R     &kp T                                &kp Y     &kp U     &kp I     &kp O      &kp P     &kp BSLH
       &mo LOWER  &kp A   &kp S    &kp D     &kp F     &kp G                                &kp H     &kp J     &kp K     &kp L      &kp SEMI  &kp SQT
       &kp LSHFT  &kp Z   &kp X    &kp C     &kp V     &kp B     &trans           &trans    &kp N     &kp M     &kp COMMA &kp PERIOD &kp SLASH &kp RET
       &kp LCTRL  &kp ESC &kp LALT &kp EQUAL &kp LCMD  &kp SPACE &trans           &trans    &mo SPACE &mo RAISE &kp MINUS &kp LBKT   &kp RBKT  &kp RSHFT
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |                                  |  F7  |  F8    |  F9  |  F10  | F11  | F12  |
 // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &     |  *   |  (    |  )   |      |
 // |  --- |      | NEXT | BRT+ | VOL+ |      |                                  | LEFT | DOWN   |  UP  | RIGHT |      |      |
 // |      |      | PREV | BRT- | VOL- |      |      |                    |      | HOME | PGDN   | PGUP | END   |      |      |
 // |      |      | PLAY |      | MUTE | BSPC |      |                    |      | BSPC | ADJUST |      |       |      |      |
                     bindings = <
       &kp F1    &kp F2   &kp F3     &kp F4       &kp F5       &kp F6                             &kp F7    &kp F8     &kp F9    &kp F10   &kp F11  &kp F12
       &kp TILDE &kp EXCL &kp AT     &kp HASH     &kp DLLR     &kp PRCNT                          &kp CARET &kp AMPS   &kp ASTRK &kp LPAR  &kp RPAR &trans
       &trans    &trans   &kp C_NEXT &kp C_BRI_UP &kp C_VOL_UP &trans                             &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT &trans   &trans
       &trans    &trans   &kp C_PREV &kp C_BRI_DN &kp C_VOL_DN &trans    &trans        &trans     &kp HOME  &kp PG_DN  &kp PG_UP &kp END   &trans   &trans
       &trans    &trans   &kp C_PP   &trans       &trans       &kp BSPC  &trans        &trans     &kp BSPC  &mo ADJUST &trans    &trans    &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | BT SEL0 | BT SEL1 | BT SEL2 | BT SEL3 | BT SEL4 |        |                                    |       |       |       |       |       |       |
 // |         |         |         |         |         |        |                                    |  DIV  |   7   |   8   |   9   |   -   |       |
 // | ADJUST  |         |         |         |         | BT NXT |                                    |   *   |   4   |   5   |   6   |   +   |       |
 // |         |         |         |         |         | BT PRV |       |                    |       |   0   |   1   |   2   |   3   |   ^   |   =   |
 // |         |         |         |         |         | BT CLR |       |                    |       |       |  ---  |   0   |   .   |       |       |
                     bindings = <
       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans                          &trans    &trans  &trans &trans  &trans    &trans
       &trans       &trans       &trans       &trans       &trans        &bt BT_NXT                      &kp SLASH &kp N7  &kp N8 &kp N9  &kp MINUS &trans
       &mo ADJUST   &trans       &trans       &trans       &trans        &bt BT_PRV                      &kp ASTRK &kp N4  &kp N5 &kp N6  &kp PLUS  &trans
       &trans       &trans       &trans       &trans       &trans        &bt BT_CLR &trans        &trans &kp N0    &kp N1  &kp N2 &kp N3  &kp CARET &kp EQUAL
       &trans       &trans       &trans       &trans       &trans        &trans     &trans        &trans &trans    &trans  &kp N0 &kp DOT &trans    &trans
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |          |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
 // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
 // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
 // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
 // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |
                     bindings = <
       &kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT                             &kp CARET       &kp AMPS        &kp ASTRK       &kp LPAR        &kp RPAR        &ext_power EP_TOG
       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &rgb_ug RGB_TOG 
       &bt BT_NXT &out OUT_TOG &out OUT_USB &out OUT_BLE &trans       &trans                                &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &trans
       &bt BT_PRV &trans       &trans       &trans       &trans       &trans       &kp LBRC        &kp RBRC &trans          &trans          &trans          &trans          &trans          &trans
       &trans     &trans       &trans       &trans       &trans       &trans       &trans          &trans   &trans          &trans          &trans          &trans          &trans          &trans
                     >;
              };
       };
};
